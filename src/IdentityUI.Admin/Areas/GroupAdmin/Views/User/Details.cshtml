@model SSRD.IdentityUI.Admin.Areas.GroupAdmin.Models.User.GroupAdminUserDetailsViewModel

@{
    GroupAdminSidebarSelection.SelectedOption = GroupAdminSidebarOptions.User;
}

@inject Microsoft.Extensions.Options.IOptions<SSRD.IdentityUI.Core.Models.Options.IdentityUIEndpoints> _identityUIEndpoints;

@{
    ViewData["Title"] = "Users";
}

@section script{
    <script>
        $(document).ready(function () {

            new UserDetails('@Model.GroupUserId');
        });

        class UserDetails {
            constructor(userId) {
                this.userId = userId;

                this.statusAlert = new StatusAlertComponent('#status-alert');

                @if (Model.StatusAlert != null)
                {
                    <text>
                        if ('@Model.StatusAlert.Success' === 'True')
                        {
                            this.statusAlert.showSuccess(@Json.Serialize(Model.StatusAlert.Messages));
                        }
                        else
                        {
                            this.statusAlert.showError(@Json.Serialize(Model.StatusAlert.Messages));
                        }
                    </text>
                }

                $('#impersonateButton').on('click', () => {
                    this.impersonate();
                });

                $('#unlockUserButton').on('click', () => {
                    this.unlock();
                })

                $('#verifyEmail').on('click', () => {
                    this.sendVereficationMain();
                })
            }

            impersonate() {
                Api.get(`/api/GroupAdmin/User/StartImpersonation/${this.userId}`)
                    .done(() => {
                        window.open(`/`);
                        location.reload();
                    })
                    .fail((response) => {
                        this.statusAlert.showErrors(response.responseJSON);
                    });
            }

            unlock() {
                Api.get(`/api/GroupAdmin/User/Unlock/${this.userId}`)
                    .done(() => {

                        //TODO: clear loceked date
                        this.statusAlert.showSuccess('User was unlocked');
                    })
                    .fail((response) => {
                        this.statusAlert.showErrors(response.responseJSON);
                    });
            }

            sendVereficationMain() {
                Api.get(`/api/GroupAdmin/User/SendVereficationMain/${this.userId}`)
                    .done(() => {
                        this.statusAlert.showSuccess('Email verification mail was sent');
                    })
                    .fail((response) => {
                        this.statusAlert.showErrors(response.responseJSON);
                    });
            }
        }
    </script>
}

<div>
    <div id="status-alert">
        @await Component.InvokeAsync("IdentityStatusAlertJs")
    </div>

    <div class="tab-content">
        <div class="main-card mb-3 card col-xl-6 offset-xl-3 col-lg-12">
            <div class="card-body">
                <div class="card-title-space">
                    <h5 class="card-title">
                        Details
                    </h5>
                </div>
                <form class="custom-form" method="post">
                    <div class="form-group">
                        <label asp-for="UserName" class="control-label">Username</label>
                        <input asp-for="UserName" class="form-control disabled" disabled />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        @if (_identityUIEndpoints.Value.UseEmailSender.HasValue && _identityUIEndpoints.Value.UseEmailSender.Value)
                        {
                            <div class="verify-email">
                                <input asp-for="Email" class="form-control" />
                                <button type="button" id="verifyEmail" class="btn btn-primary">Verify Email</button>
                            </div>
                        }
                        else
                        {
                            <input asp-for="Email" class="form-control" />
                        }
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="FirstName" class="control-label">First Name</label>
                        <input asp-for="FirstName" class="form-control" />
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="LastName" class="control-label">Last Name</label>
                        <input asp-for="LastName" class="form-control" />
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
                        <input asp-for="PhoneNumber" class="form-control" />
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                    </div>
                    <div class="details-checkboxes">
                        <div class="form-group form-check">
                            <div class="custom-control custom-switch">
                                <input asp-for="EmailConfirmed" type="checkbox" class="custom-control-input" id="customSwitches4">
                                <label asp-for="EmailConfirmed" for="customSwitches4" class="custom-control-label">Email Confirmed</label>
                            </div>
                        </div>
                        <div class="form-group form-check">
                            <div class="custom-control custom-switch">
                                <input asp-for="PhoneNumberConfirmed" type="checkbox" class="custom-control-input" id="customSwitches">
                                <label asp-for="PhoneNumberConfirmed" for="customSwitches" class="custom-control-label">Phone Number Confirmed</label>
                            </div>
                        </div>
                        <div class="form-group form-check">
                            <div class="custom-control custom-switch">
                                @if (Model.TwoFactorEnabled)
                                {
                                    <input asp-for="TwoFactorEnabled" type="checkbox" class="custom-control-input" id="customSwitches2">
                                }
                                else
                                {
                                    <input asp-for="TwoFactorEnabled" type="checkbox" class="custom-control-input" id="customSwitches2" disabled>
                                }
                                <label asp-for="TwoFactorEnabled" for="customSwitches2" class="custom-control-label">TwoFactor Enabled</label>
                            </div>
                        </div>
                        <div class="form-group form-check">
                            <div class="custom-control custom-switch">
                                <input asp-for="Enabled" type="checkbox" class="custom-control-input" id="customSwitches3">
                                <label asp-for="Enabled" for="customSwitches3" class="custom-control-label"></label>
                            </div>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.LockoutEnd))
                    {
                        <div class="lockout-holder">
                            <div>
                                <label class="control-label text-danger lockout-text">Lockout ends: </label> <label class="control-label lockout-text lockout-text-padding"> @Model.LockoutEnd</label>
                            </div>
                            <button type="button" id="unlockUserButton" class="btn btn-primary main-card ml-2 lockout-button">Unlock user</button>
                        </div>
                    }

                    <div class="button-holder">
                        <button type="button" id="impersonateButton" class="btn btn-primary custom-submit">Impersonate</button>

                        <button type="submit" class="btn btn-primary custom-submit" asp-area="GroupAdmin" asp-controller="User" asp-action="Details" asp-route-id="@Model.GroupUserId">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
